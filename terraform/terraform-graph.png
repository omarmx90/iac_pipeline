digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] module.ec2.aws_instance.ec2 (expand)" [label = "module.ec2.aws_instance.ec2", shape = "box"]
		"[root] module.ec2.aws_security_group.ec2_security_group (expand)" [label = "module.ec2.aws_security_group.ec2_security_group", shape = "box"]
		"[root] module.internet_gateway.aws_internet_gateway.internet_gateway (expand)" [label = "module.internet_gateway.aws_internet_gateway.internet_gateway", shape = "box"]
		"[root] module.public_subnet.aws_subnet.public_subnet (expand)" [label = "module.public_subnet.aws_subnet.public_subnet", shape = "box"]
		"[root] module.route_table.aws_route_table.route_table (expand)" [label = "module.route_table.aws_route_table.route_table", shape = "box"]
		"[root] module.route_table.aws_route_table_association.route_table_association (expand)" [label = "module.route_table.aws_route_table_association.route_table_association", shape = "box"]
		"[root] module.vpc.aws_vpc.vpc (expand)" [label = "module.vpc.aws_vpc.vpc", shape = "box"]
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" [label = "provider[\"registry.terraform.io/hashicorp/aws\"]", shape = "diamond"]
		"[root] var.region" [label = "var.region", shape = "note"]
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.ec2 (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.internet_gateway (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.public_subnet (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.route_table (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.vpc (close)"
		"[root] module.ec2 (close)" -> "[root] module.ec2.output.ec2_arn (expand)"
		"[root] module.ec2 (close)" -> "[root] module.ec2.output.ec2_id (expand)"
		"[root] module.ec2 (close)" -> "[root] module.ec2.var.ec2_should_be_created (expand)"
		"[root] module.ec2.aws_instance.ec2 (expand)" -> "[root] module.ec2.aws_security_group.ec2_security_group (expand)"
		"[root] module.ec2.aws_instance.ec2 (expand)" -> "[root] module.ec2.local.key_name (expand)"
		"[root] module.ec2.aws_instance.ec2 (expand)" -> "[root] module.ec2.local.private_key_path (expand)"
		"[root] module.ec2.aws_instance.ec2 (expand)" -> "[root] module.ec2.local.ssh_user (expand)"
		"[root] module.ec2.aws_instance.ec2 (expand)" -> "[root] module.ec2.var.ec2_ami (expand)"
		"[root] module.ec2.aws_instance.ec2 (expand)" -> "[root] module.ec2.var.ec2_instance_type (expand)"
		"[root] module.ec2.aws_instance.ec2 (expand)" -> "[root] module.ec2.var.ec2_name (expand)"
		"[root] module.ec2.aws_instance.ec2 (expand)" -> "[root] module.ec2.var.public_subnet_id (expand)"
		"[root] module.ec2.aws_security_group.ec2_security_group (expand)" -> "[root] module.ec2.var.ec2_security_group_description (expand)"
		"[root] module.ec2.aws_security_group.ec2_security_group (expand)" -> "[root] module.ec2.var.ec2_security_group_name (expand)"
		"[root] module.ec2.aws_security_group.ec2_security_group (expand)" -> "[root] module.ec2.var.vpc_id (expand)"
		"[root] module.ec2.local.key_name (expand)" -> "[root] module.ec2 (expand)"
		"[root] module.ec2.local.private_key_path (expand)" -> "[root] module.ec2 (expand)"
		"[root] module.ec2.local.ssh_user (expand)" -> "[root] module.ec2 (expand)"
		"[root] module.ec2.output.ec2_arn (expand)" -> "[root] module.ec2.aws_instance.ec2 (expand)"
		"[root] module.ec2.output.ec2_id (expand)" -> "[root] module.ec2.aws_instance.ec2 (expand)"
		"[root] module.ec2.var.ec2_ami (expand)" -> "[root] module.ec2 (expand)"
		"[root] module.ec2.var.ec2_instance_type (expand)" -> "[root] module.ec2 (expand)"
		"[root] module.ec2.var.ec2_name (expand)" -> "[root] module.ec2 (expand)"
		"[root] module.ec2.var.ec2_security_group_description (expand)" -> "[root] module.ec2 (expand)"
		"[root] module.ec2.var.ec2_security_group_name (expand)" -> "[root] module.ec2 (expand)"
		"[root] module.ec2.var.ec2_should_be_created (expand)" -> "[root] module.ec2 (expand)"
		"[root] module.ec2.var.public_subnet_id (expand)" -> "[root] module.ec2 (expand)"
		"[root] module.ec2.var.public_subnet_id (expand)" -> "[root] module.public_subnet.output.public_subnet_id (expand)"
		"[root] module.ec2.var.vpc_id (expand)" -> "[root] module.ec2 (expand)"
		"[root] module.ec2.var.vpc_id (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.internet_gateway (close)" -> "[root] module.internet_gateway.output.internet_gateway_id (expand)"
		"[root] module.internet_gateway.aws_internet_gateway.internet_gateway (expand)" -> "[root] module.internet_gateway.var.internet_gateway_name (expand)"
		"[root] module.internet_gateway.aws_internet_gateway.internet_gateway (expand)" -> "[root] module.internet_gateway.var.internet_gateway_should_be_created (expand)"
		"[root] module.internet_gateway.aws_internet_gateway.internet_gateway (expand)" -> "[root] module.internet_gateway.var.vpc_id (expand)"
		"[root] module.internet_gateway.output.internet_gateway_id (expand)" -> "[root] module.internet_gateway.aws_internet_gateway.internet_gateway (expand)"
		"[root] module.internet_gateway.var.internet_gateway_name (expand)" -> "[root] module.internet_gateway (expand)"
		"[root] module.internet_gateway.var.internet_gateway_should_be_created (expand)" -> "[root] module.internet_gateway (expand)"
		"[root] module.internet_gateway.var.vpc_id (expand)" -> "[root] module.internet_gateway (expand)"
		"[root] module.internet_gateway.var.vpc_id (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.public_subnet (close)" -> "[root] module.public_subnet.output.public_subnet_arn (expand)"
		"[root] module.public_subnet (close)" -> "[root] module.public_subnet.output.public_subnet_id (expand)"
		"[root] module.public_subnet.aws_subnet.public_subnet (expand)" -> "[root] module.public_subnet.var.subnet_availability_zone (expand)"
		"[root] module.public_subnet.aws_subnet.public_subnet (expand)" -> "[root] module.public_subnet.var.subnet_cidr_block (expand)"
		"[root] module.public_subnet.aws_subnet.public_subnet (expand)" -> "[root] module.public_subnet.var.subnet_name (expand)"
		"[root] module.public_subnet.aws_subnet.public_subnet (expand)" -> "[root] module.public_subnet.var.subnet_should_be_created (expand)"
		"[root] module.public_subnet.aws_subnet.public_subnet (expand)" -> "[root] module.public_subnet.var.vpc_id (expand)"
		"[root] module.public_subnet.output.public_subnet_arn (expand)" -> "[root] module.public_subnet.aws_subnet.public_subnet (expand)"
		"[root] module.public_subnet.output.public_subnet_id (expand)" -> "[root] module.public_subnet.aws_subnet.public_subnet (expand)"
		"[root] module.public_subnet.var.subnet_availability_zone (expand)" -> "[root] module.public_subnet (expand)"
		"[root] module.public_subnet.var.subnet_cidr_block (expand)" -> "[root] module.public_subnet (expand)"
		"[root] module.public_subnet.var.subnet_name (expand)" -> "[root] module.public_subnet (expand)"
		"[root] module.public_subnet.var.subnet_should_be_created (expand)" -> "[root] module.public_subnet (expand)"
		"[root] module.public_subnet.var.vpc_id (expand)" -> "[root] module.public_subnet (expand)"
		"[root] module.public_subnet.var.vpc_id (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.route_table (close)" -> "[root] module.route_table.aws_route_table_association.route_table_association (expand)"
		"[root] module.route_table (close)" -> "[root] module.route_table.output.route_table_id (expand)"
		"[root] module.route_table.aws_route_table.route_table (expand)" -> "[root] module.route_table.var.internet_gateway_id (expand)"
		"[root] module.route_table.aws_route_table.route_table (expand)" -> "[root] module.route_table.var.route_table_name (expand)"
		"[root] module.route_table.aws_route_table.route_table (expand)" -> "[root] module.route_table.var.route_table_should_be_created (expand)"
		"[root] module.route_table.aws_route_table.route_table (expand)" -> "[root] module.route_table.var.vpc_id (expand)"
		"[root] module.route_table.aws_route_table_association.route_table_association (expand)" -> "[root] module.route_table.aws_route_table.route_table (expand)"
		"[root] module.route_table.aws_route_table_association.route_table_association (expand)" -> "[root] module.route_table.var.public_subnet_id (expand)"
		"[root] module.route_table.output.route_table_id (expand)" -> "[root] module.route_table.aws_route_table.route_table (expand)"
		"[root] module.route_table.var.internet_gateway_id (expand)" -> "[root] module.internet_gateway.output.internet_gateway_id (expand)"
		"[root] module.route_table.var.internet_gateway_id (expand)" -> "[root] module.route_table (expand)"
		"[root] module.route_table.var.public_subnet_id (expand)" -> "[root] module.public_subnet.output.public_subnet_id (expand)"
		"[root] module.route_table.var.public_subnet_id (expand)" -> "[root] module.route_table (expand)"
		"[root] module.route_table.var.route_table_name (expand)" -> "[root] module.route_table (expand)"
		"[root] module.route_table.var.route_table_should_be_created (expand)" -> "[root] module.route_table (expand)"
		"[root] module.route_table.var.vpc_id (expand)" -> "[root] module.route_table (expand)"
		"[root] module.route_table.var.vpc_id (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_cidr_block (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.vpc.aws_vpc.vpc (expand)" -> "[root] module.vpc.var.vpc_cidr_block (expand)"
		"[root] module.vpc.aws_vpc.vpc (expand)" -> "[root] module.vpc.var.vpc_enable_dns_hostnames (expand)"
		"[root] module.vpc.aws_vpc.vpc (expand)" -> "[root] module.vpc.var.vpc_enable_dns_support (expand)"
		"[root] module.vpc.aws_vpc.vpc (expand)" -> "[root] module.vpc.var.vpc_name (expand)"
		"[root] module.vpc.aws_vpc.vpc (expand)" -> "[root] module.vpc.var.vpc_should_be_created (expand)"
		"[root] module.vpc.aws_vpc.vpc (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.output.vpc_arn (expand)" -> "[root] module.vpc.aws_vpc.vpc (expand)"
		"[root] module.vpc.output.vpc_cidr_block (expand)" -> "[root] module.vpc.aws_vpc.vpc (expand)"
		"[root] module.vpc.output.vpc_id (expand)" -> "[root] module.vpc.aws_vpc.vpc (expand)"
		"[root] module.vpc.var.vpc_cidr_block (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_enable_dns_hostnames (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_enable_dns_support (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_should_be_created (expand)" -> "[root] module.vpc (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.ec2.aws_instance.ec2 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.route_table.aws_route_table_association.route_table_association (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" -> "[root] var.region"
		"[root] root" -> "[root] meta.count-boundary (EachMode fixup)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)"
	}
}

